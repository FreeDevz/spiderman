spring:
  application:
    name: todoapp-backend
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/tododb
    username: todouser
    password: todopass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Flyway Configuration
  flyway:
    enabled: false  # We're using database init scripts instead
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin
      roles: ADMIN
  
  # Mail Configuration (for email notifications) - Disabled for now
  # mail:
  #   host: smtp.gmail.com
  #   port: 587
  #   username: ${MAIL_USERNAME:}
  #   password: ${MAIL_PASSWORD:}
  #   properties:
  #     mail:
  #       smtp:
  #         auth: true
  #         starttls:
  #           enable: true
  #           required: true
  
  # Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Logging Configuration
logging:
  level:
    com.todoapp: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springdoc: DEBUG
    io.swagger: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  health:
    mail:
      enabled: false  # Disable mail health check since we don't have mail credentials
    defaults:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey}
  expiration: 1800000  # 30 minutes in milliseconds
  refresh-expiration: 86400000  # 24 hours in milliseconds

# Application-specific Configuration
app:
  name: TodoApp
  version: 1.0.0
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  
  # CORS Configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
    allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  # File Upload Configuration
  upload:
    max-file-size: 5MB
    max-request-size: 10MB
    allowed-extensions: jpg,jpeg,png,pdf,doc,docx

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
  show-actuator: true
  
---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  # Development Database (if different)
  datasource:
    url: jdbc:postgresql://localhost:5432/tododb
    username: todouser
    password: todopass
  
  # Development Logging
  logging:
    level:
      com.todoapp: DEBUG
      org.springframework.web: DEBUG
  
  # Development Mail (console) - Disabled for now
  # mail:
  #   host: localhost
  #   port: 1025  # MailHog for testing
  
  # Development CORS (more permissive)
  cors:
    allowed-origins: "*"

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  # Docker Database Connection
  datasource:
    url: jdbc:postgresql://database:5432/tododb
    username: todouser
    password: ${DB_PASSWORD:todopass}

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  
  # Test Database (H2 in-memory)
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true 